version
source('~/Development/R-stuff/ISL exercises/ch2/q10.R', echo=TRUE)
View(stats.summary)
get_stats <- function(quants){
# get min, max, mean, etc.
stats.table <- as.data.frame.matrix(summary(quants))
# ugly hack to calculate sd & append to the summary table
# get sd as vector
stats.sd <- data.frame("sd" = sapply(quants, sd))
# reformat
formatted.stats.sd <- stats.sd %>%
# preserve var names
as.data.table(keep.rownames = T) %>%
# transpose to wide
t %>% data.table(keep.rownames = T) %>%
# drop redundant first col
dplyr::select(-1)
# assign first row to table names
names(formatted.stats.sd) <- unlist(formatted.stats.sd[1,])
# get rid of redundant first row
final <- formatted.stats.sd[2,]
# STILL TO DO: append sd to stats table
return(stats.table)
}
stats.summary <-  get_stats(quants)
stats.table <- as.data.frame.matrix(summary(quants))
# ugly hack to calculate sd & append to the summary table
# get sd as vector
stats.sd <- data.frame("sd" = sapply(quants, sd))
# reformat
formatted.stats.sd <- stats.sd %>%
# preserve var names
as.data.table(keep.rownames = T) %>%
# transpose to wide
t %>% data.table(keep.rownames = T) %>%
# drop redundant first col
dplyr::select(-1)
# assign first row to table names
names(formatted.stats.sd) <- unlist(formatted.stats.sd[1,])
# get rid of redundant first row
final <- formatted.stats.sd[2,]
View(chas_ans)
View(final)
View(final)
View(formatted.stats.sd)
formatted.stats.sd <- stats.sd %>%
# preserve var names
as.data.table(keep.rownames = T)
View(formatted.stats.sd)
formatted.stats.sd <- stats.sd %>%
# preserve var names
as.data.table(keep.rownames = T) %>%
# add formatting to match summary table
mutate("sd" = paste("sd : ", sd)
formatted.stats.sd <- stats.sd %>%
# preserve var names
as.data.table(keep.rownames = T) %>%
# add formatting to match summary table
mutate("sd" = paste("sd : ", sd))
formatted.stats.sd <- stats.sd %>%
# preserve var names
as.data.table(keep.rownames = T) %>%
# add formatting to match summary table
mutate(sd = paste("sd : ", sd))
View(formatted.stats.sd)
View(stats.summary)
formatted.stats.sd <- stats.sd %>%
# preserve var names
as.data.table(keep.rownames = T) %>%
# add formatting to match summary table
mutate(sd = paste("sd : ", sd))
# transpose to wide
t %>% data.table(keep.rownames = T) %>%
# drop redundant first col
dplyr::select(-1)
# assign first row to table names
names(formatted.stats.sd) <- unlist(formatted.stats.sd[1,])
# get rid of redundant first row
final <- formatted.stats.sd[2,]
View(final)
formatted.stats.sd <- stats.sd %>%
# preserve var names
as.data.table(keep.rownames = T) %>%
# add formatting to match summary table
mutate(sd = paste("sd : ", sd))
# transpose to wide
t %>% data.table(keep.rownames = T)
formatted.stats.sd <- stats.sd %>%
# preserve var names
as.data.table(keep.rownames = T) %>%
# add formatting to match summary table
mutate(sd = paste("sd : ", sd)) %>%
# transpose to wide
t %>% data.table(keep.rownames = T)
View(formatted.stats.sd)
formatted.stats.sd <- stats.sd %>%
# preserve var names
as.data.table(keep.rownames = T) %>%
# add formatting to match summary table
mutate(sd = paste("sd : ", sd)) %>%
# transpose to wide
t %>% data.table(keep.rownames = T) %>%
# drop redundant first col
dplyr::select(-1)
formatted.stats.sd <- stats.sd %>%
# preserve var names
as.data.table(keep.rownames = T) %>%
# add formatting to match summary table
mutate(sd = paste("sd : ", sd)) %>%
# transpose to wide
t %>% data.table(keep.rownames = T) %>%
# drop redundant first col
dplyr::select(-1)
# assign first row to table names
names(formatted.stats.sd) <- unlist(formatted.stats.sd[1,])
# get rid of redundant first row
final <- formatted.stats.sd[2,]
View(final)
?rbind
stats.summary <-  get_stats(quants)
View(stats.summary)
stats.table <- rbind(final, stats.table)
# function to summarize key stats
get_stats <- function(quants){
# get min, max, mean, etc.
stats.table <- as.data.frame.matrix(summary(quants))
# ugly hack to calculate sd & append to the summary table
# get sd as vector
stats.sd <- data.frame("sd" = sapply(quants, sd))
# reformat
formatted.stats.sd <- stats.sd %>%
# preserve var names
as.data.table(keep.rownames = T) %>%
# add formatting to match summary table
mutate(sd = paste("sd : ", sd)) %>%
# transpose to wide
t %>% data.table(keep.rownames = T) %>%
# drop redundant first col
dplyr::select(-1)
# assign first row to table names
names(formatted.stats.sd) <- unlist(formatted.stats.sd[1,])
# get rid of redundant first row
final <- formatted.stats.sd[2,]
# STILL TO DO: append sd to stats table
stats.table <- rbind(final, stats.table)
return(stats.table)
}
stats.summary <-  get_stats(quants)
get_stats <- function(quants){
# get min, max, mean, etc.
stats.table <- as.data.frame.matrix(summary(quants))
# ugly hack to calculate sd & append to the summary table
# get sd as vector
stats.sd <- data.frame("sd" = sapply(quants, sd))
# reformat
formatted.stats.sd <- stats.sd %>%
# preserve var names
as.data.table(keep.rownames = T) %>%
# add formatting to match summary table
mutate(sd = paste("sd : ", sd)) %>%
# transpose to wide
t %>% data.table(keep.rownames = T) %>%
# drop redundant first col
dplyr::select(-1)
# assign first row to table names
names(formatted.stats.sd) <- unlist(formatted.stats.sd[1,])
# get rid of redundant first row
final <- formatted.stats.sd[2,]
# STILL TO DO: append sd to stats table
stats.table <- rbind(final, stats.table, fill=T)
return(stats.table)
}
stats.summary <-  get_stats(quants)
View(stats.summary)
names(stats.summary)
names(stats.table)
quants <-Boston %>%
select_if(is.numeric) %>%
names(quants) <- trimws(names(quants))
quals <- Boston %>% select_if(is.factor)
names(quals) <- trimws(names(quals))
names(quants)
get_stats <- function(quants){
# get min, max, mean, etc.
stats.table <- as.data.frame.matrix(summary(quants))
# ugly hack to calculate sd & append to the summary table
# get sd as vector
stats.sd <- data.frame("sd" = sapply(quants, sd))
# reformat
formatted.stats.sd <- stats.sd %>%
# preserve var names
as.data.table(keep.rownames = T) %>%
# add formatting to match summary table
mutate(sd = paste("sd : ", sd)) %>%
# transpose to wide
t %>% data.table(keep.rownames = T) %>%
# drop redundant first col
dplyr::select(-1)
# assign first row to table names
names(formatted.stats.sd) <- unlist(formatted.stats.sd[1,])
# get rid of redundant first row
final <- formatted.stats.sd[2,]
# STILL TO DO: append sd to stats table
stats.table <- rbind(final, stats.table, fill=T)
return(stats.table)
}
stats.summary <-  get_stats(quants)
View(stats.summary)
# function to summarize key stats
get_stats <- function(quants){
# get min, max, mean, etc.
stats.table <- as.data.frame.matrix(summary(quants))
# ugly hack to calculate sd & append to the summary table
# get sd as vector
stats.sd <- data.frame("sd" = sapply(quants, sd))
# reformat
formatted.stats.sd <- stats.sd %>%
# preserve var names
as.data.table(keep.rownames = T) %>%
# add formatting to match summary table
mutate(sd = paste("sd : ", sd)) %>%
# transpose to wide
t %>% data.table(keep.rownames = T) %>%
# drop redundant first col
dplyr::select(-1)
# assign first row to table names
names(formatted.stats.sd) <- unlist(formatted.stats.sd[1,])
# get rid of redundant first row
final <- formatted.stats.sd[2,]
# STILL TO DO: append sd to stats table
stats.table <- rbind(final, stats.table)
return(stats.table)
}
stats.summary <-  get_stats(quants)
rm(stats.summary)
class(names(stats.sd))
class(names(stats.table))
names(stats.table)[1]
names(quants)[1]
# function to summarize key stats
get_stats <- function(quants){
# get min, max, mean, etc.
stats.table <- as.data.frame.matrix(summary(quants))
names(stats.table) <- trimws(names(stats.table))
# ugly hack to calculate sd & append to the summary table
# get sd as vector
stats.sd <- data.frame("sd" = sapply(quants, sd))
# reformat
formatted.stats.sd <- stats.sd %>%
# preserve var names
as.data.table(keep.rownames = T) %>%
# add formatting to match summary table
mutate(sd = paste("sd : ", sd)) %>%
# transpose to wide
t %>% data.table(keep.rownames = T) %>%
# drop redundant first col
dplyr::select(-1)
# assign first row to table names
names(formatted.stats.sd) <- unlist(formatted.stats.sd[1,])
# get rid of redundant first row
final <- formatted.stats.sd[2,]
# STILL TO DO: append sd to stats table
stats.table <- rbind(final, stats.table)
return(stats.table)
}
stats.summary <-  get_stats(quants)
View(stats.summary)
stats.table.tmp <- rbind(stats.table[1:4,], final)
stats.table <- rbind(stats.table.tmp,stats.table[5:7,])
stats.table[1:4,]
# function to summarize key stats
get_stats <- function(quants){
# get min, max, mean, etc.
stats.table <- as.data.frame.matrix(summary(quants))
names(stats.table) <- trimws(names(stats.table))
# ugly hack to calculate sd & append to the summary table
# get sd as vector
stats.sd <- data.frame("sd" = sapply(quants, sd))
# reformat
formatted.stats.sd <- stats.sd %>%
# preserve var names
as.data.table(keep.rownames = T) %>%
# add formatting to match summary table
mutate(sd = paste("sd : ", sd)) %>%
# transpose to wide
t %>% data.table(keep.rownames = T) %>%
# drop redundant first col
dplyr::select(-1)
# assign first row to table names
names(formatted.stats.sd) <- unlist(formatted.stats.sd[1,])
# get rid of redundant first row
final <- formatted.stats.sd[2,]
# STILL TO DO: append sd to stats table
stats.table.tmp <- rbind(stats.table[1:4,], final)
stats.table <- rbind(stats.table.tmp, stats.table[5:7,])
return(stats.table)
}
stats.summary <-  get_stats(quants)
View(stats.summary)
?round
get_stats <- function(quants){
# get min, max, mean, etc.
stats.table <- as.data.frame.matrix(summary(quants))
names(stats.table) <- trimws(names(stats.table))
# ugly hack to calculate sd & append to the summary table
# get sd as vector
stats.sd <- data.frame("sd" = sapply(quants, sd)) %>%
round(digit = 4)
# reformat
formatted.stats.sd <- stats.sd %>%
# preserve var names
as.data.table(keep.rownames = T) %>%
# add formatting to match summary table
mutate(sd = paste("Sd : ", sd)) %>%
# transpose to wide
t %>% data.table(keep.rownames = T) %>%
# drop redundant first col
dplyr::select(-1)
# assign first row to table names
names(formatted.stats.sd) <- unlist(formatted.stats.sd[1,])
# get rid of redundant first row
final <- formatted.stats.sd[2,]
# STILL TO DO: append sd to stats table
stats.table.tmp <- rbind(stats.table[1:4,], final)
stats.table <- rbind(stats.table.tmp, stats.table[5:6,])
return(stats.table)
}
stats.summary <-  get_stats(quants)
View(stats.summary)
source('~/Development/R-stuff/ISL exercises/ch2/q10.R', echo=TRUE)
