version
source('~/Development/R-stuff/ISL exercises/ch2/q10.R', echo=TRUE)
View(quants)
# global options
options(stringsAsFactors = F)
setwd(dirname(parent.frame(2)$ofile))
# Load libraries
require(tidyverse)
require(data.table)
# Load data
library(MASS)
# global options
options(stringsAsFactors = F)
# Load data
library(MASS)
Boston
data(Boston)
# Step 1: check obj structure
str(Boston) ## WHY ARE SOME VARS COMING BACK AS INT?
sapply(Boston, class)
apply(Boston, class)
lapply(Boston, class)
sapply(Boston, class)
lapply(Boston, function(x) ifelse(class(x) == "integer", as.factor(x)))
?select_if
summary(Boston)
# Step 1: check obj structure
str(Boston) ## WHY ARE SOME VARS COMING BACK AS INT?
classes <-lapply(Boston, class)
View(classes)
View(classes)
lapply(Boston, function(x) ifelse(class(x) == 'integer'), "YES", "NO")
lapply(Boston, function(x) ifelse(class(x) == 'integer'), "YES", "NO")
lapply(Boston, function(x) ifelse(class(x) == 'integer', "YES", "NO"))
lapply(Boston, function(x) ifelse(class(x) == 'integer', factor))
lapply(Boston, function(x) ifelse(class(x) == 'integer', factor, x))
?lapply
fixed_B <- lapply(Boston, function(x) ifelse(class(x) == 'integer', as.factor, x))
View(fixed_B)
fixed_B <- lapply(Boston, function(x) ifelse(class(x) == 'integer', class(x) <- 'factor', x))
View(fixed_B)
fixed_B <- lapply(Boston, function(x) ifelse(class(x) == 'integer', as.factor(x), x))
str(Boston)
lapply(Boston, function(x) ifelse(class(x) == 'integer', factor, x))
View(Boston)
class(Boston$chas)
Boston[1:14] <- lapply(Boston[1:14], function(x) ifelse(class(x) == 'integer', factor, x))
str(Boston) ## WHY ARE SOME VARS COMING BACK AS INT?
Boston <- Boston %>%
mutate_if(is.integer, as.factor)
str(Boston)
quants <-Boston %>% select_if(is.numeric)
quals <- Boston %>% select_if(is.factor)
